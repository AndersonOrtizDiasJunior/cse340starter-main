CREATE TYPE public.account_type AS ENUM ('Client', 'Employee', 'Admin');
ALTER TYPE public.account_type OWNER TO cse340adj;
--Classification Table
CREATE TABLE public.classification (
    classification_id INT GENERATED BY DEFAULT AS IDENTITY,
    classification_name CHARACTER VARYING NOT NULL,
    CONSTRAINT classification_pk PRIMARY KEY (classification_id)
);
--Inventory table
CREATE TABLE IF NOT EXISTS public.inventory (
    inv_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    inv_make character varying NOT NULL,
    inv_model character varying NOT NULL,
    inv_year character (4) NOT NULL,
    inv_description text NOT NULL,
    inv_image character varying NOT NULL,
    inv_thumbnail character varying NOT NULL,
    inv_price numeric(9, 0) NOT NULL,
    inv_miles integer NOT NULL,
    inv_color character varying NOT NULL,
    classification_id integer NOT NULL,
    CONSTRAINT inventory_pkey PRIMARY KEY (inv_id)
);
--Account Table
CREATE TABLE IF NOT EXISTS public.account (
    account_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    account_firstname character varying NOT NULL,
    account_lastname character varying NOT NULL,
    account_email character varying NOT NULL,
    account_password character varying NOT NULL,
    account_type account_type NOT NULL DEFAULT 'Client'::account_type,
    CONSTRAINT account_pkey PRIMARY KEY (account_id)
);
--Creating data
INSERT INTO public.classification (classification_name)
VALUES ('Sedan'),
    ('SUV'),
    ('Truck'),
    ('Sports'),
    ('Hatchback');
INSERT INTO public.inventory (
        inv_make,
        inv_model,
        inv_year,
        inv_description,
        inv_image,
        inv_thumbnail,
        inv_price,
        inv_miles,
        inv_color,
        classification_id
    )
VALUES (
        'Toyota',
        'Camry',
        '2022',
        'Spacious and reliable',
        '/images/camry.jpg',
        '/thumbnails/camry.jpg',
        25000,
        10000,
        'Silver',
        1
    ),
    (
        'Honda',
        'CR-V',
        '2023',
        'Great for family trips',
        '/images/crv.jpg',
        '/thumbnails/crv.jpg',
        30000,
        8000,
        'White',
        2
    ),
    (
        'Ford',
        'F-150',
        '2021',
        'Powerful and versatile',
        '/images/f150.jpg',
        '/thumbnails/f150.jpg',
        35000,
        12000,
        'Black',
        3
    ),
    (
        'Chevrolet',
        'Camaro',
        '2023',
        'Sporty and stylish',
        '/images/camaro.jpg',
        '/thumbnails/camaro.jpg',
        40000,
        5000,
        'Red',
        4
    ),
    (
        'Volkswagen',
        'Golf',
        '2022',
        'Compact and fuel-efficient',
        '/images/golf.jpg',
        '/thumbnails/golf.jpg',
        20000,
        15000,
        'Blue',
        5
    ),
    (
        'GM',
        'Hummer',
        '2024',
        'Powerful and rugged, small interiors',
        '/images/hummer.jpg',
        '/thumbnails/hummer.jpg',
        70000,
        2000,
        'Black',
        3
    );
INSERT INTO public.account (
        account_firstname,
        account_lastname,
        account_email,
        account_password,
        account_type
    )
VALUES (
        'John',
        'Doe',
        'john.doe@example.com',
        'password123',
        'Client'::account_type
    ),
    (
        'Jane',
        'Smith',
        'jane.smith@example.com',
        'abc123',
        'Employee'::account_type
    ),
    (
        'Alice',
        'Johnson',
        'alice.johnson@example.com',
        'pass123',
        'Admin'::account_type
    ),
    (
        'Bob',
        'Brown',
        'bob.brown@example.com',
        'securepass',
        'Client'::account_type
    ),
    (
        'Eva',
        'Lee',
        'eva.lee@example.com',
        'evapassword',
        'Employee'::account_type
    );
--Relationship
ALTER TABLE IF EXISTS public.inventory
ADD CONSTRAINT fk_classification FOREIGN KEY (classification_id) REFERENCES public.classification (classification_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE NO ACTION;
--Vehicles File Path
UPDATE public.inventory
SET inv_image = CONCAT(
        '/images/vehicles/',
        SUBSTRING(
            inv_image
            FROM 9
        )
    ),
    inv_thumbnail = CONCAT(
        '/images/vehicles/',
        SUBSTRING(
            inv_thumbnail
            FROM 13
        )
    );